@startuml POOKEMON
!theme reddress-darkgreen
title | POOKEMON |
top to bottom direction

package Others
{
    class Deck 
    {
        + "Create" Deck(pokemons : Pokemon*)
        + drawPokemon(pokemon : Pokemon) : Pokemon
        + displayDeck()
        + toString() : String
    }

    class Field 
    {
        + "Create" Field()
        + isEmpty() : Boolean
        + addPokemon(pokemon : Pokemon)
        + displayField()  
        + getPokemons() : Pokemon*
    }

    class Graveyard
    {
        + "Create" Graveyard()
        + addPokemon(pokemon : Pokemon)
        + displayGraveyard()
        + toString() : String
    }

    class Hand
    {
        + "Create" Hand()
        + "Create" Hand(pokemons : Pokemon*)
        + addPokemon(pokemon : Pokemon)
        + displayHand()
        + toString() : String
    }

}

' AgrÃ©gations
Deck o--> "-m_pokemons\n0, 21" Pokemon.Pokemon
Field o--> "-m_pokemons\n0, 3" Pokemon.Pokemon
Graveyard o--> "-m_pokemons\n0, 21" Pokemon.Pokemon
Hand o--> "-m_pokemons\n0, 5" Pokemon.Pokemon

package Player
{
    class Player
    {
        - m_playerNumber : Integer
        + "Create" Player()
        + displayPlayer()
    }

    class AI 
    {
        + "Create" Player()
        + displayPlayer()
    }
}

Player.Player *--> "-m_field\n1, 1" Others.Field
Player.Player *--> "-m_graveyard\n 1,1" Others.Graveyard
Player.Player *--> "-m_deck\n 1,1" Others.Deck
Player.Player *--> "-m_hand\n 1,1" Others.Hand

AI --up-|> Player.Player

package Pokemon 
{
    class Pokemon
    {
       - m_name : String
       - m_hp : Integer
       - m_hpMax : Integer
       - m_attack : Integer
       - m_affinity : String

       + attack(pokemon : Pokemon) 
       + getName() : String
       + getHP() : Integer
       + getHPMax : Integer
       + getAttack : Integer
       + getAffinity : String

       + toString() : String
    }

    enum Element
    {
        WATER
        EARTH 
        FIRE
        AIR
    }

    class Affinity
    {

    }
}

package Utils
{
    class HelperFunctions
    {
        +{static}padRight(s : String, n : Integer) : String
        +{static}padLeft(s : String, n : Integer) : String
        +{static}getCorrespondingColor(affinity : String) : String
    }
}

class Game
{
    - m_currentPlayer : Integer
    - m_turn : Integer

    + "Create" Game()
    + showGameStatus()
}

Game *--> "-m_player\n 1,1" Player.Player
Game *--> "-m_ai\n 1,1" Player.AI
Game *--> "-m_winner\n 1,1" Player.Player

class Pookemon 
{
    +{static}main(arg : String*)
}

Pookemon --> "uses" Game
Field --> "uses" Utils.HelperFunctions

@enduml